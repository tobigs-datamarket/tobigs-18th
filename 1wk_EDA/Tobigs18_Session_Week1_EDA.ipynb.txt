{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **1. Settings**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **1. Import Library**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **2. Load Data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "home = 'D:\\\\2022\\\\Tobigs 임시\\\\Session\\\\'\n",
    "data = pd.read_csv(home+'HR_Employee_Attrition.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **3. Data Overview**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>...</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "      <td>1470.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>36.923810</td>\n",
       "      <td>802.485714</td>\n",
       "      <td>9.192517</td>\n",
       "      <td>2.912925</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1024.865306</td>\n",
       "      <td>2.721769</td>\n",
       "      <td>65.891156</td>\n",
       "      <td>2.729932</td>\n",
       "      <td>2.063946</td>\n",
       "      <td>...</td>\n",
       "      <td>2.712245</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.793878</td>\n",
       "      <td>11.279592</td>\n",
       "      <td>2.799320</td>\n",
       "      <td>2.761224</td>\n",
       "      <td>7.008163</td>\n",
       "      <td>4.229252</td>\n",
       "      <td>2.187755</td>\n",
       "      <td>4.123129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.135373</td>\n",
       "      <td>403.509100</td>\n",
       "      <td>8.106864</td>\n",
       "      <td>1.024165</td>\n",
       "      <td>0.0</td>\n",
       "      <td>602.024335</td>\n",
       "      <td>1.093082</td>\n",
       "      <td>20.329428</td>\n",
       "      <td>0.711561</td>\n",
       "      <td>1.106940</td>\n",
       "      <td>...</td>\n",
       "      <td>1.081209</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.852077</td>\n",
       "      <td>7.780782</td>\n",
       "      <td>1.289271</td>\n",
       "      <td>0.706476</td>\n",
       "      <td>6.126525</td>\n",
       "      <td>3.623137</td>\n",
       "      <td>3.222430</td>\n",
       "      <td>3.568136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>30.000000</td>\n",
       "      <td>465.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>491.250000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>36.000000</td>\n",
       "      <td>802.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1020.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>43.000000</td>\n",
       "      <td>1157.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1555.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>83.750000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>1499.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2068.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>17.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Age    DailyRate  DistanceFromHome    Education  EmployeeCount  \\\n",
       "count  1470.000000  1470.000000       1470.000000  1470.000000         1470.0   \n",
       "mean     36.923810   802.485714          9.192517     2.912925            1.0   \n",
       "std       9.135373   403.509100          8.106864     1.024165            0.0   \n",
       "min      18.000000   102.000000          1.000000     1.000000            1.0   \n",
       "25%      30.000000   465.000000          2.000000     2.000000            1.0   \n",
       "50%      36.000000   802.000000          7.000000     3.000000            1.0   \n",
       "75%      43.000000  1157.000000         14.000000     4.000000            1.0   \n",
       "max      60.000000  1499.000000         29.000000     5.000000            1.0   \n",
       "\n",
       "       EmployeeNumber  EnvironmentSatisfaction   HourlyRate  JobInvolvement  \\\n",
       "count     1470.000000              1470.000000  1470.000000     1470.000000   \n",
       "mean      1024.865306                 2.721769    65.891156        2.729932   \n",
       "std        602.024335                 1.093082    20.329428        0.711561   \n",
       "min          1.000000                 1.000000    30.000000        1.000000   \n",
       "25%        491.250000                 2.000000    48.000000        2.000000   \n",
       "50%       1020.500000                 3.000000    66.000000        3.000000   \n",
       "75%       1555.750000                 4.000000    83.750000        3.000000   \n",
       "max       2068.000000                 4.000000   100.000000        4.000000   \n",
       "\n",
       "          JobLevel  ...  RelationshipSatisfaction  StandardHours  \\\n",
       "count  1470.000000  ...               1470.000000         1470.0   \n",
       "mean      2.063946  ...                  2.712245           80.0   \n",
       "std       1.106940  ...                  1.081209            0.0   \n",
       "min       1.000000  ...                  1.000000           80.0   \n",
       "25%       1.000000  ...                  2.000000           80.0   \n",
       "50%       2.000000  ...                  3.000000           80.0   \n",
       "75%       3.000000  ...                  4.000000           80.0   \n",
       "max       5.000000  ...                  4.000000           80.0   \n",
       "\n",
       "       StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "count       1470.000000        1470.000000            1470.000000   \n",
       "mean           0.793878          11.279592               2.799320   \n",
       "std            0.852077           7.780782               1.289271   \n",
       "min            0.000000           0.000000               0.000000   \n",
       "25%            0.000000           6.000000               2.000000   \n",
       "50%            1.000000          10.000000               3.000000   \n",
       "75%            1.000000          15.000000               3.000000   \n",
       "max            3.000000          40.000000               6.000000   \n",
       "\n",
       "       WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "count      1470.000000     1470.000000         1470.000000   \n",
       "mean          2.761224        7.008163            4.229252   \n",
       "std           0.706476        6.126525            3.623137   \n",
       "min           1.000000        0.000000            0.000000   \n",
       "25%           2.000000        3.000000            2.000000   \n",
       "50%           3.000000        5.000000            3.000000   \n",
       "75%           3.000000        9.000000            7.000000   \n",
       "max           4.000000       40.000000           18.000000   \n",
       "\n",
       "       YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "count              1470.000000           1470.000000  \n",
       "mean                  2.187755              4.123129  \n",
       "std                   3.222430              3.568136  \n",
       "min                   0.000000              0.000000  \n",
       "25%                   0.000000              2.000000  \n",
       "50%                   1.000000              3.000000  \n",
       "75%                   3.000000              7.000000  \n",
       "max                  15.000000             17.000000  \n",
       "\n",
       "[8 rows x 26 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Attrition</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>...</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1102</td>\n",
       "      <td>Sales</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>279</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1373</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Other</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>1392</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>27</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>591</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Attrition     BusinessTravel  DailyRate              Department  \\\n",
       "0   41       Yes      Travel_Rarely       1102                   Sales   \n",
       "1   49        No  Travel_Frequently        279  Research & Development   \n",
       "2   37       Yes      Travel_Rarely       1373  Research & Development   \n",
       "3   33        No  Travel_Frequently       1392  Research & Development   \n",
       "4   27        No      Travel_Rarely        591  Research & Development   \n",
       "\n",
       "   DistanceFromHome  Education EducationField  EmployeeCount  EmployeeNumber  \\\n",
       "0                 1          2  Life Sciences              1               1   \n",
       "1                 8          1  Life Sciences              1               2   \n",
       "2                 2          2          Other              1               4   \n",
       "3                 3          4  Life Sciences              1               5   \n",
       "4                 2          1        Medical              1               7   \n",
       "\n",
       "   ...  RelationshipSatisfaction StandardHours  StockOptionLevel  \\\n",
       "0  ...                         1            80                 0   \n",
       "1  ...                         4            80                 1   \n",
       "2  ...                         2            80                 0   \n",
       "3  ...                         3            80                 0   \n",
       "4  ...                         4            80                 1   \n",
       "\n",
       "   TotalWorkingYears  TrainingTimesLastYear WorkLifeBalance  YearsAtCompany  \\\n",
       "0                  8                      0               1               6   \n",
       "1                 10                      3               3              10   \n",
       "2                  7                      3               3               0   \n",
       "3                  8                      3               3               8   \n",
       "4                  6                      3               3               2   \n",
       "\n",
       "  YearsInCurrentRole  YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                  4                        0                     5  \n",
       "1                  7                        1                     7  \n",
       "2                  0                        0                     0  \n",
       "3                  7                        3                     0  \n",
       "4                  2                        2                     2  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **2. 결측치 및 이상치 확인**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Attrition</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>...</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1465</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1466</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1467</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1468</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1469</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1470 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Age  Attrition  BusinessTravel  DailyRate  Department  \\\n",
       "0     False      False           False      False       False   \n",
       "1     False      False           False      False       False   \n",
       "2     False      False           False      False       False   \n",
       "3     False      False           False      False       False   \n",
       "4     False      False           False      False       False   \n",
       "...     ...        ...             ...        ...         ...   \n",
       "1465  False      False           False      False       False   \n",
       "1466  False      False           False      False       False   \n",
       "1467  False      False           False      False       False   \n",
       "1468  False      False           False      False       False   \n",
       "1469  False      False           False      False       False   \n",
       "\n",
       "      DistanceFromHome  Education  EducationField  EmployeeCount  \\\n",
       "0                False      False           False          False   \n",
       "1                False      False           False          False   \n",
       "2                False      False           False          False   \n",
       "3                False      False           False          False   \n",
       "4                False      False           False          False   \n",
       "...                ...        ...             ...            ...   \n",
       "1465             False      False           False          False   \n",
       "1466             False      False           False          False   \n",
       "1467             False      False           False          False   \n",
       "1468             False      False           False          False   \n",
       "1469             False      False           False          False   \n",
       "\n",
       "      EmployeeNumber  ...  RelationshipSatisfaction  StandardHours  \\\n",
       "0              False  ...                     False          False   \n",
       "1              False  ...                     False          False   \n",
       "2              False  ...                     False          False   \n",
       "3              False  ...                     False          False   \n",
       "4              False  ...                     False          False   \n",
       "...              ...  ...                       ...            ...   \n",
       "1465           False  ...                     False          False   \n",
       "1466           False  ...                     False          False   \n",
       "1467           False  ...                     False          False   \n",
       "1468           False  ...                     False          False   \n",
       "1469           False  ...                     False          False   \n",
       "\n",
       "      StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                False              False                  False   \n",
       "1                False              False                  False   \n",
       "2                False              False                  False   \n",
       "3                False              False                  False   \n",
       "4                False              False                  False   \n",
       "...                ...                ...                    ...   \n",
       "1465             False              False                  False   \n",
       "1466             False              False                  False   \n",
       "1467             False              False                  False   \n",
       "1468             False              False                  False   \n",
       "1469             False              False                  False   \n",
       "\n",
       "      WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0               False           False               False   \n",
       "1               False           False               False   \n",
       "2               False           False               False   \n",
       "3               False           False               False   \n",
       "4               False           False               False   \n",
       "...               ...             ...                 ...   \n",
       "1465            False           False               False   \n",
       "1466            False           False               False   \n",
       "1467            False           False               False   \n",
       "1468            False           False               False   \n",
       "1469            False           False               False   \n",
       "\n",
       "      YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                       False                 False  \n",
       "1                       False                 False  \n",
       "2                       False                 False  \n",
       "3                       False                 False  \n",
       "4                       False                 False  \n",
       "...                       ...                   ...  \n",
       "1465                    False                 False  \n",
       "1466                    False                 False  \n",
       "1467                    False                 False  \n",
       "1468                    False                 False  \n",
       "1469                    False                 False  \n",
       "\n",
       "[1470 rows x 35 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull() # 결측치 확인 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Attrition</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>...</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1465</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1466</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1467</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1468</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1469</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1470 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Age  Attrition  BusinessTravel  DailyRate  Department  \\\n",
       "0     False      False           False      False       False   \n",
       "1     False      False           False      False       False   \n",
       "2     False      False           False      False       False   \n",
       "3     False      False           False      False       False   \n",
       "4     False      False           False      False       False   \n",
       "...     ...        ...             ...        ...         ...   \n",
       "1465  False      False           False      False       False   \n",
       "1466  False      False           False      False       False   \n",
       "1467  False      False           False      False       False   \n",
       "1468  False      False           False      False       False   \n",
       "1469  False      False           False      False       False   \n",
       "\n",
       "      DistanceFromHome  Education  EducationField  EmployeeCount  \\\n",
       "0                False      False           False          False   \n",
       "1                False      False           False          False   \n",
       "2                False      False           False          False   \n",
       "3                False      False           False          False   \n",
       "4                False      False           False          False   \n",
       "...                ...        ...             ...            ...   \n",
       "1465             False      False           False          False   \n",
       "1466             False      False           False          False   \n",
       "1467             False      False           False          False   \n",
       "1468             False      False           False          False   \n",
       "1469             False      False           False          False   \n",
       "\n",
       "      EmployeeNumber  ...  RelationshipSatisfaction  StandardHours  \\\n",
       "0              False  ...                     False          False   \n",
       "1              False  ...                     False          False   \n",
       "2              False  ...                     False          False   \n",
       "3              False  ...                     False          False   \n",
       "4              False  ...                     False          False   \n",
       "...              ...  ...                       ...            ...   \n",
       "1465           False  ...                     False          False   \n",
       "1466           False  ...                     False          False   \n",
       "1467           False  ...                     False          False   \n",
       "1468           False  ...                     False          False   \n",
       "1469           False  ...                     False          False   \n",
       "\n",
       "      StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                False              False                  False   \n",
       "1                False              False                  False   \n",
       "2                False              False                  False   \n",
       "3                False              False                  False   \n",
       "4                False              False                  False   \n",
       "...                ...                ...                    ...   \n",
       "1465             False              False                  False   \n",
       "1466             False              False                  False   \n",
       "1467             False              False                  False   \n",
       "1468             False              False                  False   \n",
       "1469             False              False                  False   \n",
       "\n",
       "      WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0               False           False               False   \n",
       "1               False           False               False   \n",
       "2               False           False               False   \n",
       "3               False           False               False   \n",
       "4               False           False               False   \n",
       "...               ...             ...                 ...   \n",
       "1465            False           False               False   \n",
       "1466            False           False               False   \n",
       "1467            False           False               False   \n",
       "1468            False           False               False   \n",
       "1469            False           False               False   \n",
       "\n",
       "      YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                       False                 False  \n",
       "1                       False                 False  \n",
       "2                       False                 False  \n",
       "3                       False                 False  \n",
       "4                       False                 False  \n",
       "...                       ...                   ...  \n",
       "1465                    False                 False  \n",
       "1466                    False                 False  \n",
       "1467                    False                 False  \n",
       "1468                    False                 False  \n",
       "1469                    False                 False  \n",
       "\n",
       "[1470 rows x 35 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna() # 이상치 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "결측치 개수\n",
      "Age                         0\n",
      "Attrition                   0\n",
      "BusinessTravel              0\n",
      "DailyRate                   0\n",
      "Department                  0\n",
      "DistanceFromHome            0\n",
      "Education                   0\n",
      "EducationField              0\n",
      "EmployeeCount               0\n",
      "EmployeeNumber              0\n",
      "EnvironmentSatisfaction     0\n",
      "Gender                      0\n",
      "HourlyRate                  0\n",
      "JobInvolvement              0\n",
      "JobLevel                    0\n",
      "JobRole                     0\n",
      "JobSatisfaction             0\n",
      "MaritalStatus               0\n",
      "MonthlyIncome               0\n",
      "MonthlyRate                 0\n",
      "NumCompaniesWorked          0\n",
      "Over18                      0\n",
      "OverTime                    0\n",
      "PercentSalaryHike           0\n",
      "PerformanceRating           0\n",
      "RelationshipSatisfaction    0\n",
      "StandardHours               0\n",
      "StockOptionLevel            0\n",
      "TotalWorkingYears           0\n",
      "TrainingTimesLastYear       0\n",
      "WorkLifeBalance             0\n",
      "YearsAtCompany              0\n",
      "YearsInCurrentRole          0\n",
      "YearsSinceLastPromotion     0\n",
      "YearsWithCurrManager        0\n",
      "dtype: int64\n",
      "이상치 개수\n",
      "Age                         0\n",
      "Attrition                   0\n",
      "BusinessTravel              0\n",
      "DailyRate                   0\n",
      "Department                  0\n",
      "DistanceFromHome            0\n",
      "Education                   0\n",
      "EducationField              0\n",
      "EmployeeCount               0\n",
      "EmployeeNumber              0\n",
      "EnvironmentSatisfaction     0\n",
      "Gender                      0\n",
      "HourlyRate                  0\n",
      "JobInvolvement              0\n",
      "JobLevel                    0\n",
      "JobRole                     0\n",
      "JobSatisfaction             0\n",
      "MaritalStatus               0\n",
      "MonthlyIncome               0\n",
      "MonthlyRate                 0\n",
      "NumCompaniesWorked          0\n",
      "Over18                      0\n",
      "OverTime                    0\n",
      "PercentSalaryHike           0\n",
      "PerformanceRating           0\n",
      "RelationshipSatisfaction    0\n",
      "StandardHours               0\n",
      "StockOptionLevel            0\n",
      "TotalWorkingYears           0\n",
      "TrainingTimesLastYear       0\n",
      "WorkLifeBalance             0\n",
      "YearsAtCompany              0\n",
      "YearsInCurrentRole          0\n",
      "YearsSinceLastPromotion     0\n",
      "YearsWithCurrManager        0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# 이상치 및 결측치 개수 확인\n",
    "print('결측치 개수')\n",
    "print(data.isnull().sum())\n",
    "print('이상치 개수')\n",
    "print(data.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **3. 데이터 유형 확인**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **1. 범주형 자료**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Attrition : ['Yes' 'No']\n",
      "=========\n",
      "BusinessTravel : ['Travel_Rarely' 'Travel_Frequently' 'Non-Travel']\n",
      "=========\n",
      "Department : ['Sales' 'Research & Development' 'Human Resources']\n",
      "=========\n",
      "EducationField : ['Life Sciences' 'Other' 'Medical' 'Marketing' 'Technical Degree'\n",
      " 'Human Resources']\n",
      "=========\n",
      "Gender : ['Female' 'Male']\n",
      "=========\n",
      "JobRole : ['Sales Executive' 'Research Scientist' 'Laboratory Technician'\n",
      " 'Manufacturing Director' 'Healthcare Representative' 'Manager'\n",
      " 'Sales Representative' 'Research Director' 'Human Resources']\n",
      "=========\n",
      "MaritalStatus : ['Single' 'Married' 'Divorced']\n",
      "=========\n",
      "Over18 : ['Y']\n",
      "=========\n",
      "OverTime : ['Yes' 'No']\n",
      "=========\n",
      "object column의 개수 : 9 개\n"
     ]
    }
   ],
   "source": [
    "# category column\n",
    "cate_cols=[]\n",
    "\n",
    "for column in data.columns:\n",
    "    if data[column].dtype == object:\n",
    "        cate_cols.append(column)\n",
    "        print(f'{column} : {data[column].unique()}')\n",
    "        print('=========')\n",
    "\n",
    "print(f'object column의 개수 : {len(cate_cols)} 개')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **2.수치형 자료**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Age : [41 49 37 33 27 32 59 30 38 36 35 29 31 34 28 22 53 24 21 42 44 46 39 43\n",
      " 50 26 48 55 45 56 23 51 40 54 58 20 25 19 57 52 47 18 60]\n",
      "=========\n",
      "DailyRate : [1102  279 1373 1392  591 1005 1324 1358  216 1299  809  153  670 1346\n",
      "  103 1389  334 1123 1219  371  673 1218  419  391  699 1282 1125  691\n",
      "  477  705  924 1459  125  895  813 1273  869  890  852 1141  464 1240\n",
      " 1357  994  721 1360 1065  408 1211 1229  626 1434 1488 1097 1443  515\n",
      "  853 1142  655 1115  427  653  989 1435 1223  836 1195 1339  664  318\n",
      " 1225 1328 1082  548  132  746  776  193  397  945 1214  111  573 1153\n",
      " 1400  541  432  288  669  530  632 1334  638 1093 1217 1353  120  682\n",
      "  489  807  827  871  665 1040 1420  240 1280  534 1456  658  142 1127\n",
      " 1031 1189 1354 1467  922  394 1312  750  441  684  249  841  147  528\n",
      "  594  470  957  542  802 1355 1150 1329  959 1033 1316  364  438  689\n",
      "  201 1427  857  933 1181 1395  662 1436  194  967 1496 1169 1145  630\n",
      "  303 1256  440 1450 1452  465  702 1157  602 1480 1268  713  134  526\n",
      " 1380  140  629 1356  328 1084  931  692 1069  313  894  556 1344  290\n",
      "  138  926 1261  472 1002  878  905 1180  121 1136  635 1151  644 1045\n",
      "  829 1242 1469  896  992 1052 1147 1396  663  119  979  319 1413  944\n",
      " 1323  532  818  854 1034  771 1401 1431  976 1411 1300  252 1327  832\n",
      " 1017 1199  504  505  916 1247  685  269 1416  833  307 1311  128  488\n",
      "  529 1210 1463  675 1385 1403  452  666 1158  228  996  728 1315  322\n",
      " 1479  797 1070  442  496 1372  920  688 1449 1117  636  506  444  950\n",
      "  889  555  230 1232  566 1302  812 1476  218 1132 1105  906  849  390\n",
      "  106 1249  192  553  117  185 1091  723 1220  588 1377 1018 1275  798\n",
      "  672 1162  508 1482  559  210  928 1001  549 1124  738  570 1130 1192\n",
      "  343  144 1296 1309  483  810  544 1062 1319  641 1332  756  845  593\n",
      " 1171  350  921 1144  143 1046  575  156 1283  755  304 1178  329 1362\n",
      " 1371  202  253  164 1107  759 1305  982  821 1381  480 1473  891 1063\n",
      "  645 1490  317  422 1485 1368 1448  296 1398 1349  986 1099 1116 1499\n",
      "  983 1009 1303 1274 1277  587  413 1276  988 1474  163  267  619  302\n",
      "  443  828  561  426  232 1306 1094  509  775  195  258  471  799  956\n",
      "  535 1495  446 1245  703  823 1246  622 1287  448  254 1365  538  525\n",
      "  558  782  362 1236 1112  204 1343  604 1216  646  160  238 1397  306\n",
      "  991  482 1176  913 1076  727  885  243  806  817 1410 1207 1442  693\n",
      "  929  562  608  580  970 1179  294  314  316  654  168  381  217  501\n",
      "  650  141  804  975 1090  346  430  268  167  621  527  883  954  310\n",
      "  719  725  715  657 1146  182  376  571  384  791 1111 1243 1092 1325\n",
      "  805  213  118  676 1252  286 1258  932 1041  859  720  946 1184  436\n",
      "  589  760  887 1318  625  180  586 1012  661  930  342 1230 1271 1278\n",
      "  607  130  300  583 1418 1269  379  395 1265 1222  341  868 1231  102\n",
      "  881 1383 1075  374 1086  781  177  500 1425 1454  617 1085  995 1122\n",
      "  618  546  462 1198 1272  154 1137 1188  188 1333  867  263  938  129\n",
      "  616  498 1404 1053  289 1376  231  152  882  903 1379  335  722  461\n",
      "  974 1126  840 1134  248  955  939 1391 1206  287 1441  109 1066  277\n",
      "  466 1055  265  135  247 1035  266  145 1038 1234 1109 1089  788  124\n",
      "  660 1186 1464  796  415  769 1003 1366  330 1492 1204  309 1330  469\n",
      "  697 1262 1050  770  406  203 1308  984  439  793 1451 1182  174  490\n",
      "  718  433  773  603  874  367  199  481  647 1384  902  819  862 1457\n",
      "  977  942 1402 1421 1361  917  200  150  179  696  116  363  107 1465\n",
      "  458 1212 1103  966 1010  326 1098  969 1167  694 1320  536  373  599\n",
      "  251  131  237 1429  648  735  531  429  968  879  640  412  848  360\n",
      " 1138  325 1322  299 1030  634  524  256 1060  935  495  282  206  943\n",
      "  523  507  601  855 1291 1405 1369  999 1202  285  404  736 1498 1200\n",
      " 1439  499  205  683 1462  949  652  332 1475  337  971 1174  667  560\n",
      "  172  383 1255  359  401  377  592 1445 1221  866  981  447 1326  748\n",
      "  990  405  115  790  830 1193 1423  467  271  410 1083  516  224  136\n",
      " 1029  333 1440  674 1342  898  824  492  598  740  888 1288  104 1108\n",
      "  479 1351  474  437  884 1370  264 1059  563  457 1313  241 1015  336\n",
      " 1387  170  208  671  711  737 1470  365  763  567  486  772  301  311\n",
      "  584  880  392  148  708 1259  786  370  678  146  581  918 1238  585\n",
      "  741  552  369  717  543  964  792  611  176  897  600 1054  428  181\n",
      "  211 1079  590  305  953  478 1375  244  511 1294  196  734 1239 1253\n",
      " 1128 1336  234  766  261 1194  431  572 1422 1297  574  355  207  706\n",
      "  280  726  414  352 1224  459 1254 1131  835 1172 1266  783  219 1213\n",
      " 1096 1251 1394  605 1064 1337  937  157  754 1168  155 1444  189  911\n",
      " 1321 1154  557  642  801  161 1382 1037  105  582  704  345 1120 1378\n",
      "  468  613 1023  628]\n",
      "=========\n",
      "DistanceFromHome : [ 1  8  2  3 24 23 27 16 15 26 19 21  5 11  9  7  6 10  4 25 12 18 29 22\n",
      " 14 20 28 17 13]\n",
      "=========\n",
      "Education : [2 1 4 3 5]\n",
      "=========\n",
      "EmployeeCount : [1]\n",
      "=========\n",
      "EmployeeNumber : [   1    2    4 ... 2064 2065 2068]\n",
      "=========\n",
      "EnvironmentSatisfaction : [2 3 4 1]\n",
      "=========\n",
      "HourlyRate : [ 94  61  92  56  40  79  81  67  44  84  49  31  93  50  51  80  96  78\n",
      "  45  82  53  83  58  72  48  42  41  86  97  75  33  37  73  98  36  47\n",
      "  71  30  43  99  59  95  57  76  87  66  55  32  52  70  62  64  63  60\n",
      " 100  46  39  77  35  91  54  34  90  65  88  85  89  68  69  74  38]\n",
      "=========\n",
      "JobInvolvement : [3 2 4 1]\n",
      "=========\n",
      "JobLevel : [2 1 3 4 5]\n",
      "=========\n",
      "JobSatisfaction : [4 2 3 1]\n",
      "=========\n",
      "MonthlyIncome : [5993 5130 2090 ... 9991 5390 4404]\n",
      "=========\n",
      "MonthlyRate : [19479 24907  2396 ...  5174 13243 10228]\n",
      "=========\n",
      "NumCompaniesWorked : [8 1 6 9 0 4 5 2 7 3]\n",
      "=========\n",
      "PercentSalaryHike : [11 23 15 12 13 20 22 21 17 14 16 18 19 24 25]\n",
      "=========\n",
      "PerformanceRating : [3 4]\n",
      "=========\n",
      "RelationshipSatisfaction : [1 4 2 3]\n",
      "=========\n",
      "StandardHours : [80]\n",
      "=========\n",
      "StockOptionLevel : [0 1 3 2]\n",
      "=========\n",
      "TotalWorkingYears : [ 8 10  7  6 12  1 17  5  3 31 13  0 26 24 22  9 19  2 23 14 15  4 29 28\n",
      " 21 25 20 11 16 37 38 30 40 18 36 34 32 33 35 27]\n",
      "=========\n",
      "TrainingTimesLastYear : [0 3 2 5 1 4 6]\n",
      "=========\n",
      "WorkLifeBalance : [1 3 2 4]\n",
      "=========\n",
      "YearsAtCompany : [ 6 10  0  8  2  7  1  9  5  4 25  3 12 14 22 15 27 21 17 11 13 37 16 20\n",
      " 40 24 33 19 36 18 29 31 32 34 26 30 23]\n",
      "=========\n",
      "YearsInCurrentRole : [ 4  7  0  2  5  9  8  3  6 13  1 15 14 16 11 10 12 18 17]\n",
      "=========\n",
      "YearsSinceLastPromotion : [ 0  1  3  2  7  4  8  6  5 15  9 13 12 10 11 14]\n",
      "=========\n",
      "YearsWithCurrManager : [ 5  7  0  2  6  8  3 11 17  1  4 12  9 10 15 13 16 14]\n",
      "=========\n",
      "object column의 개수 : 26 개\n"
     ]
    }
   ],
   "source": [
    "# numeric column\n",
    "numeric_cols=[]\n",
    "\n",
    "for column in data.columns:\n",
    "    if data[column].dtype != object:\n",
    "        numeric_cols.append(column)\n",
    "        print(f'{column} : {data[column].unique()}')\n",
    "        print('=========')\n",
    "\n",
    "print(f'object column의 개수 : {len(numeric_cols)} 개')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **전체 확인**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Attrition', 'BusinessTravel', 'Department', 'EducationField', 'Gender', 'JobRole', 'MaritalStatus', 'Over18', 'OverTime']\n",
      "-------\n",
      "['Age', 'DailyRate', 'DistanceFromHome', 'Education', 'EmployeeCount', 'EmployeeNumber', 'EnvironmentSatisfaction', 'HourlyRate', 'JobInvolvement', 'JobLevel', 'JobSatisfaction', 'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked', 'PercentSalaryHike', 'PerformanceRating', 'RelationshipSatisfaction', 'StandardHours', 'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear', 'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole', 'YearsSinceLastPromotion', 'YearsWithCurrManager']\n"
     ]
    }
   ],
   "source": [
    "print(cate_cols)\n",
    "print('-------')\n",
    "print(numeric_cols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "column : Age // data type : int64\n",
      "column : Attrition // data type : object\n",
      "column : BusinessTravel // data type : object\n",
      "column : DailyRate // data type : int64\n",
      "column : Department // data type : object\n",
      "column : DistanceFromHome // data type : int64\n",
      "column : Education // data type : int64\n",
      "column : EducationField // data type : object\n",
      "column : EmployeeCount // data type : int64\n",
      "column : EmployeeNumber // data type : int64\n",
      "column : EnvironmentSatisfaction // data type : int64\n",
      "column : Gender // data type : object\n",
      "column : HourlyRate // data type : int64\n",
      "column : JobInvolvement // data type : int64\n",
      "column : JobLevel // data type : int64\n",
      "column : JobRole // data type : object\n",
      "column : JobSatisfaction // data type : int64\n",
      "column : MaritalStatus // data type : object\n",
      "column : MonthlyIncome // data type : int64\n",
      "column : MonthlyRate // data type : int64\n",
      "column : NumCompaniesWorked // data type : int64\n",
      "column : Over18 // data type : object\n",
      "column : OverTime // data type : object\n",
      "column : PercentSalaryHike // data type : int64\n",
      "column : PerformanceRating // data type : int64\n",
      "column : RelationshipSatisfaction // data type : int64\n",
      "column : StandardHours // data type : int64\n",
      "column : StockOptionLevel // data type : int64\n",
      "column : TotalWorkingYears // data type : int64\n",
      "column : TrainingTimesLastYear // data type : int64\n",
      "column : WorkLifeBalance // data type : int64\n",
      "column : YearsAtCompany // data type : int64\n",
      "column : YearsInCurrentRole // data type : int64\n",
      "column : YearsSinceLastPromotion // data type : int64\n",
      "column : YearsWithCurrManager // data type : int64\n"
     ]
    }
   ],
   "source": [
    "for column in data.columns:\n",
    "    print(f'column : {column} // data type : {data[column].dtype}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **4. 데이터 시각화**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **1. 시각화 이전 전처리**\n",
    "* 해당 데이터를 column Attrition을 기준으로 값을 나누어주었음.\n",
    "    * Attrition은 Yes or No의 값을 갖는 column\n",
    "* `get_dummies`함수를 사용하여 Attrition을 dummy value로 변환하고 값에 대해(Yes/No) category를 갖게 만들어주었음. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_tmp = pd.get_dummies(data['Attrition'])\n",
    "data_tmp.rename(columns={'No': 'Attrition_No',\n",
    "                          'Yes':'Attrition_Yes'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_AttritionCategory = pd.concat([data,data_tmp],axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **2. Attrition_Yes - JobRole 간의 관계**\n",
    "* JobRole에 따른 퇴사자의 비율을 구하고 pie chart로 시각화\n",
    "* **결과** \n",
    "    * Sales Representative 직무가 퇴사자 비율 중 가장 높음\n",
    "    * Research Director 직무가 퇴사자 비율 중 가장 낮음 \n",
    "\n",
    "    \n",
    "#### **깨알**\n",
    "`df.groupy(열1)[열2].agg(함수1)`\n",
    "1. 열1의 값에 따라서 df를 그룹화\n",
    "2. 그룹화된 df에서 열2 indexing\n",
    "3. 열1에 따른 각 그룹에서 함수1을 적용 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "JobRole\n",
       "Sales Representative         0.397590\n",
       "Laboratory Technician        0.239382\n",
       "Human Resources              0.230769\n",
       "Sales Executive              0.174847\n",
       "Research Scientist           0.160959\n",
       "Manufacturing Director       0.068966\n",
       "Healthcare Representative    0.068702\n",
       "Manager                      0.049020\n",
       "Research Director            0.025000\n",
       "Name: Attrition_Yes, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 비율값 살펴보기 (내림차순)\n",
    "data_AttritionCategory.groupby('JobRole')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 변수 선언 \n",
    "JobRole_Attrition = data_AttritionCategory.groupby('JobRole')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "JobRole_Attrition_Ratio=JobRole_Attrition.values # 비율 값 \n",
    "JobRole_Attrition_Index=JobRole_Attrition.index # JobRole 인덱스 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "palette_color = sns.color_palette('Set2') # pie 차트 색상 정하기\n",
    "fig = plt.figure(figsize=(8,8), facecolor='white') # 시각화 배경 흰색 \n",
    "fig = plt.pie(JobRole_Attrition_Ratio,labels=JobRole_Attrition_Index,radius=1.0,colors=palette_color,autopct='%0.2f%%')\n",
    "plt.show() # 출력 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **3. Attrition_Yes - DistanceFromHome 간의 관계**\n",
    "* DistanceFromHome에 따른 퇴사자의 비율을 구하고 bar graph로 시각화\n",
    "* **결과**\n",
    "    * 가장 먼 거리에서 퇴사자 비율이 높지 않다는 점이 흥미로음.\n",
    "    * 24, 13, 22, 12 가 각각 퇴사자 비율이 높음. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DistanceFromHome\n",
       "24    0.428571\n",
       "13    0.315789\n",
       "22    0.315789\n",
       "12    0.300000\n",
       "27    0.250000\n",
       "17    0.250000\n",
       "25    0.240000\n",
       "16    0.218750\n",
       "9     0.211765\n",
       "15    0.192308\n",
       "14    0.190476\n",
       "23    0.185185\n",
       "29    0.185185\n",
       "21    0.166667\n",
       "3     0.166667\n",
       "20    0.160000\n",
       "18    0.153846\n",
       "5     0.153846\n",
       "4     0.140625\n",
       "11    0.137931\n",
       "19    0.136364\n",
       "2     0.132701\n",
       "7     0.130952\n",
       "10    0.127907\n",
       "8     0.125000\n",
       "1     0.125000\n",
       "26    0.120000\n",
       "6     0.118644\n",
       "28    0.086957\n",
       "Name: Attrition_Yes, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 비율값 살펴보기 (내림차순)\n",
    "data_AttritionCategory.groupby('DistanceFromHome')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 변수 선언 \n",
    "Distance_Attrition = data_AttritionCategory.groupby('DistanceFromHome')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "Distance_Attrition_Ratio=Distance_Attrition.values # 비율 값 \n",
    "Distance_Attrition_Index=Distance_Attrition.index # JobRole 인덱스 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.bar(Distance_Attrition_Index,Distance_Attrition_Ratio)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **4. Attrition_Yes - JobLevel 간의 관계**\n",
    "* JobLevel에 따른 퇴사자의 비율을 구하고 pie chart로 시각화\n",
    "* **결과**\n",
    "    * 퇴사자 중 업무 강도가 가장 낮은 경우(1)에서 가장 많이 발생함. (26%)\n",
    "    * 가장 높은 5의 업무 강도에서는 퇴사자 비율 중 7%를 차지함. \n",
    "    * 퇴사자 중 가장 낮은 비율의 업무 강도는 4임. (4%)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "JobLevel\n",
       "1    0.263352\n",
       "3    0.146789\n",
       "2    0.097378\n",
       "5    0.072464\n",
       "4    0.047170\n",
       "Name: Attrition_Yes, dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 비율값 살펴보기 (내림차순)\n",
    "data_AttritionCategory.groupby('JobLevel')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 변수 선언 \n",
    "JobLevel_Attrition = data_AttritionCategory.groupby('JobLevel')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "JobLevel_Attrition_Ratio=JobLevel_Attrition.values # 비율 값 \n",
    "JobLevel_Attrition_Index=JobLevel_Attrition.index # JobRole 인덱스 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.bar(JobLevel_Attrition_Index,JobLevel_Attrition_Ratio)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **5. Attrition_Yes - EnvironmentSatisfaction 간의 관계**\n",
    "* EnvironmentSatisfaction에 따른 퇴사자의 비율을 구하고 bar plot으로 시각화\n",
    "* **결과**\n",
    "    * 업무환경에 대한 만족도가 낮을수록 퇴사자 비율이 많음. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EnvironmentSatisfaction\n",
       "1    0.253521\n",
       "2    0.149826\n",
       "3    0.136865\n",
       "4    0.134529\n",
       "Name: Attrition_Yes, dtype: float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 비율값 살펴보기 (내림차순)\n",
    "data_AttritionCategory.groupby('EnvironmentSatisfaction')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "Environment_Attrition = data_AttritionCategory.groupby('EnvironmentSatisfaction')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "Environment_Attrition_Ratio=Environment_Attrition.values # 비율 값 \n",
    "Environment_Attrition_Index=Environment_Attrition.index # JobRole 인덱스 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.bar(Environment_Attrition_Index,Environment_Attrition_Ratio)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **6. Attrition_Yes - MonthlyRate 간의 관계**\n",
    "* MonthlyRate에 따른 퇴사자의 box plot으로 시각화\n",
    "* **결과**\n",
    "    * Yes인 퇴사자와 No인 재직자의 월급을 비교했을때, 전반적으로 재직자 월급이 더 높게 분포함. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x = 'Attrition', y = 'MonthlyIncome', data = data)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **5. 수치형 변수 간 상관관계 파악**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Age', 'DailyRate', 'DistanceFromHome', 'Education', 'EmployeeCount', 'EmployeeNumber', 'EnvironmentSatisfaction', 'HourlyRate', 'JobInvolvement', 'JobLevel', 'JobSatisfaction', 'MonthlyIncome', 'MonthlyRate', 'NumCompaniesWorked', 'PercentSalaryHike', 'PerformanceRating', 'RelationshipSatisfaction', 'StandardHours', 'StockOptionLevel', 'TotalWorkingYears', 'TrainingTimesLastYear', 'WorkLifeBalance', 'YearsAtCompany', 'YearsInCurrentRole', 'YearsSinceLastPromotion', 'YearsWithCurrManager']\n"
     ]
    }
   ],
   "source": [
    "print(numeric_cols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                               Age  DailyRate  DistanceFromHome  Education  \\\n",
      "Age                       1.000000   0.010661         -0.001686   0.208034   \n",
      "DailyRate                 0.010661   1.000000         -0.004985  -0.016806   \n",
      "DistanceFromHome         -0.001686  -0.004985          1.000000   0.021042   \n",
      "Education                 0.208034  -0.016806          0.021042   1.000000   \n",
      "EmployeeNumber           -0.010145  -0.050990          0.032916   0.042070   \n",
      "EnvironmentSatisfaction   0.010146   0.018355         -0.016075  -0.027128   \n",
      "HourlyRate                0.024287   0.023381          0.031131   0.016775   \n",
      "JobInvolvement            0.029820   0.046135          0.008783   0.042438   \n",
      "JobLevel                  0.509604   0.002966          0.005303   0.101589   \n",
      "JobSatisfaction          -0.004892   0.030571         -0.003669  -0.011296   \n",
      "MonthlyIncome             0.497855   0.007707         -0.017014   0.094961   \n",
      "MonthlyRate               0.028051  -0.032182          0.027473  -0.026084   \n",
      "NumCompaniesWorked        0.299635   0.038153         -0.029251   0.126317   \n",
      "PercentSalaryHike         0.003634   0.022704          0.040235  -0.011111   \n",
      "PerformanceRating         0.001904   0.000473          0.027110  -0.024539   \n",
      "RelationshipSatisfaction  0.053535   0.007846          0.006557  -0.009118   \n",
      "StockOptionLevel          0.037510   0.042143          0.044872   0.018422   \n",
      "TotalWorkingYears         0.680381   0.014515          0.004628   0.148280   \n",
      "TrainingTimesLastYear    -0.019621   0.002453         -0.036942  -0.025100   \n",
      "WorkLifeBalance          -0.021490  -0.037848         -0.026556   0.009819   \n",
      "YearsAtCompany            0.311309  -0.034055          0.009508   0.069114   \n",
      "YearsInCurrentRole        0.212901   0.009932          0.018845   0.060236   \n",
      "YearsSinceLastPromotion   0.216513  -0.033229          0.010029   0.054254   \n",
      "YearsWithCurrManager      0.202089  -0.026363          0.014406   0.069065   \n",
      "\n",
      "                          EmployeeNumber  EnvironmentSatisfaction  HourlyRate  \\\n",
      "Age                            -0.010145                 0.010146    0.024287   \n",
      "DailyRate                      -0.050990                 0.018355    0.023381   \n",
      "DistanceFromHome                0.032916                -0.016075    0.031131   \n",
      "Education                       0.042070                -0.027128    0.016775   \n",
      "EmployeeNumber                  1.000000                 0.017621    0.035179   \n",
      "EnvironmentSatisfaction         0.017621                 1.000000   -0.049857   \n",
      "HourlyRate                      0.035179                -0.049857    1.000000   \n",
      "JobInvolvement                 -0.006888                -0.008278    0.042861   \n",
      "JobLevel                       -0.018519                 0.001212   -0.027853   \n",
      "JobSatisfaction                -0.046247                -0.006784   -0.071335   \n",
      "MonthlyIncome                  -0.014829                -0.006259   -0.015794   \n",
      "MonthlyRate                     0.012648                 0.037600   -0.015297   \n",
      "NumCompaniesWorked             -0.001251                 0.012594    0.022157   \n",
      "PercentSalaryHike              -0.012944                -0.031701   -0.009062   \n",
      "PerformanceRating              -0.020359                -0.029548   -0.002172   \n",
      "RelationshipSatisfaction       -0.069861                 0.007665    0.001330   \n",
      "StockOptionLevel                0.062227                 0.003432    0.050263   \n",
      "TotalWorkingYears              -0.014365                -0.002693   -0.002334   \n",
      "TrainingTimesLastYear           0.023603                -0.019359   -0.008548   \n",
      "WorkLifeBalance                 0.010309                 0.027627   -0.004607   \n",
      "YearsAtCompany                 -0.011240                 0.001458   -0.019582   \n",
      "YearsInCurrentRole             -0.008416                 0.018007   -0.024106   \n",
      "YearsSinceLastPromotion        -0.009019                 0.016194   -0.026716   \n",
      "YearsWithCurrManager           -0.009197                -0.004999   -0.020123   \n",
      "\n",
      "                          JobInvolvement  JobLevel  JobSatisfaction  ...  \\\n",
      "Age                             0.029820  0.509604        -0.004892  ...   \n",
      "DailyRate                       0.046135  0.002966         0.030571  ...   \n",
      "DistanceFromHome                0.008783  0.005303        -0.003669  ...   \n",
      "Education                       0.042438  0.101589        -0.011296  ...   \n",
      "EmployeeNumber                 -0.006888 -0.018519        -0.046247  ...   \n",
      "EnvironmentSatisfaction        -0.008278  0.001212        -0.006784  ...   \n",
      "HourlyRate                      0.042861 -0.027853        -0.071335  ...   \n",
      "JobInvolvement                  1.000000 -0.012630        -0.021476  ...   \n",
      "JobLevel                       -0.012630  1.000000        -0.001944  ...   \n",
      "JobSatisfaction                -0.021476 -0.001944         1.000000  ...   \n",
      "MonthlyIncome                  -0.015271  0.950300        -0.007157  ...   \n",
      "MonthlyRate                    -0.016322  0.039563         0.000644  ...   \n",
      "NumCompaniesWorked              0.015012  0.142501        -0.055699  ...   \n",
      "PercentSalaryHike              -0.017205 -0.034730         0.020002  ...   \n",
      "PerformanceRating              -0.029071 -0.021222         0.002297  ...   \n",
      "RelationshipSatisfaction        0.034297  0.021642        -0.012454  ...   \n",
      "StockOptionLevel                0.021523  0.013984         0.010690  ...   \n",
      "TotalWorkingYears              -0.005533  0.782208        -0.020185  ...   \n",
      "TrainingTimesLastYear          -0.015338 -0.018191        -0.005779  ...   \n",
      "WorkLifeBalance                -0.014617  0.037818        -0.019459  ...   \n",
      "YearsAtCompany                 -0.021355  0.534739        -0.003803  ...   \n",
      "YearsInCurrentRole              0.008717  0.389447        -0.002305  ...   \n",
      "YearsSinceLastPromotion        -0.024184  0.353885        -0.018214  ...   \n",
      "YearsWithCurrManager            0.025976  0.375281        -0.027656  ...   \n",
      "\n",
      "                          PerformanceRating  RelationshipSatisfaction  \\\n",
      "Age                                0.001904                  0.053535   \n",
      "DailyRate                          0.000473                  0.007846   \n",
      "DistanceFromHome                   0.027110                  0.006557   \n",
      "Education                         -0.024539                 -0.009118   \n",
      "EmployeeNumber                    -0.020359                 -0.069861   \n",
      "EnvironmentSatisfaction           -0.029548                  0.007665   \n",
      "HourlyRate                        -0.002172                  0.001330   \n",
      "JobInvolvement                    -0.029071                  0.034297   \n",
      "JobLevel                          -0.021222                  0.021642   \n",
      "JobSatisfaction                    0.002297                 -0.012454   \n",
      "MonthlyIncome                     -0.017120                  0.025873   \n",
      "MonthlyRate                       -0.009811                 -0.004085   \n",
      "NumCompaniesWorked                -0.014095                  0.052733   \n",
      "PercentSalaryHike                  0.773550                 -0.040490   \n",
      "PerformanceRating                  1.000000                 -0.031351   \n",
      "RelationshipSatisfaction          -0.031351                  1.000000   \n",
      "StockOptionLevel                   0.003506                 -0.045952   \n",
      "TotalWorkingYears                  0.006744                  0.024054   \n",
      "TrainingTimesLastYear             -0.015579                  0.002497   \n",
      "WorkLifeBalance                    0.002572                  0.019604   \n",
      "YearsAtCompany                     0.003435                  0.019367   \n",
      "YearsInCurrentRole                 0.034986                 -0.015123   \n",
      "YearsSinceLastPromotion            0.017896                  0.033493   \n",
      "YearsWithCurrManager               0.022827                 -0.000867   \n",
      "\n",
      "                          StockOptionLevel  TotalWorkingYears  \\\n",
      "Age                               0.037510           0.680381   \n",
      "DailyRate                         0.042143           0.014515   \n",
      "DistanceFromHome                  0.044872           0.004628   \n",
      "Education                         0.018422           0.148280   \n",
      "EmployeeNumber                    0.062227          -0.014365   \n",
      "EnvironmentSatisfaction           0.003432          -0.002693   \n",
      "HourlyRate                        0.050263          -0.002334   \n",
      "JobInvolvement                    0.021523          -0.005533   \n",
      "JobLevel                          0.013984           0.782208   \n",
      "JobSatisfaction                   0.010690          -0.020185   \n",
      "MonthlyIncome                     0.005408           0.772893   \n",
      "MonthlyRate                      -0.034323           0.026442   \n",
      "NumCompaniesWorked                0.030075           0.237639   \n",
      "PercentSalaryHike                 0.007528          -0.020608   \n",
      "PerformanceRating                 0.003506           0.006744   \n",
      "RelationshipSatisfaction         -0.045952           0.024054   \n",
      "StockOptionLevel                  1.000000           0.010136   \n",
      "TotalWorkingYears                 0.010136           1.000000   \n",
      "TrainingTimesLastYear             0.011274          -0.035662   \n",
      "WorkLifeBalance                   0.004129           0.001008   \n",
      "YearsAtCompany                    0.015058           0.628133   \n",
      "YearsInCurrentRole                0.050818           0.460365   \n",
      "YearsSinceLastPromotion           0.014352           0.404858   \n",
      "YearsWithCurrManager              0.024698           0.459188   \n",
      "\n",
      "                          TrainingTimesLastYear  WorkLifeBalance  \\\n",
      "Age                                   -0.019621        -0.021490   \n",
      "DailyRate                              0.002453        -0.037848   \n",
      "DistanceFromHome                      -0.036942        -0.026556   \n",
      "Education                             -0.025100         0.009819   \n",
      "EmployeeNumber                         0.023603         0.010309   \n",
      "EnvironmentSatisfaction               -0.019359         0.027627   \n",
      "HourlyRate                            -0.008548        -0.004607   \n",
      "JobInvolvement                        -0.015338        -0.014617   \n",
      "JobLevel                              -0.018191         0.037818   \n",
      "JobSatisfaction                       -0.005779        -0.019459   \n",
      "MonthlyIncome                         -0.021736         0.030683   \n",
      "MonthlyRate                            0.001467         0.007963   \n",
      "NumCompaniesWorked                    -0.066054        -0.008366   \n",
      "PercentSalaryHike                     -0.005221        -0.003280   \n",
      "PerformanceRating                     -0.015579         0.002572   \n",
      "RelationshipSatisfaction               0.002497         0.019604   \n",
      "StockOptionLevel                       0.011274         0.004129   \n",
      "TotalWorkingYears                     -0.035662         0.001008   \n",
      "TrainingTimesLastYear                  1.000000         0.028072   \n",
      "WorkLifeBalance                        0.028072         1.000000   \n",
      "YearsAtCompany                         0.003569         0.012089   \n",
      "YearsInCurrentRole                    -0.005738         0.049856   \n",
      "YearsSinceLastPromotion               -0.002067         0.008941   \n",
      "YearsWithCurrManager                  -0.004096         0.002759   \n",
      "\n",
      "                          YearsAtCompany  YearsInCurrentRole  \\\n",
      "Age                             0.311309            0.212901   \n",
      "DailyRate                      -0.034055            0.009932   \n",
      "DistanceFromHome                0.009508            0.018845   \n",
      "Education                       0.069114            0.060236   \n",
      "EmployeeNumber                 -0.011240           -0.008416   \n",
      "EnvironmentSatisfaction         0.001458            0.018007   \n",
      "HourlyRate                     -0.019582           -0.024106   \n",
      "JobInvolvement                 -0.021355            0.008717   \n",
      "JobLevel                        0.534739            0.389447   \n",
      "JobSatisfaction                -0.003803           -0.002305   \n",
      "MonthlyIncome                   0.514285            0.363818   \n",
      "MonthlyRate                    -0.023655           -0.012815   \n",
      "NumCompaniesWorked             -0.118421           -0.090754   \n",
      "PercentSalaryHike              -0.035991           -0.001520   \n",
      "PerformanceRating               0.003435            0.034986   \n",
      "RelationshipSatisfaction        0.019367           -0.015123   \n",
      "StockOptionLevel                0.015058            0.050818   \n",
      "TotalWorkingYears               0.628133            0.460365   \n",
      "TrainingTimesLastYear           0.003569           -0.005738   \n",
      "WorkLifeBalance                 0.012089            0.049856   \n",
      "YearsAtCompany                  1.000000            0.758754   \n",
      "YearsInCurrentRole              0.758754            1.000000   \n",
      "YearsSinceLastPromotion         0.618409            0.548056   \n",
      "YearsWithCurrManager            0.769212            0.714365   \n",
      "\n",
      "                          YearsSinceLastPromotion  YearsWithCurrManager  \n",
      "Age                                      0.216513              0.202089  \n",
      "DailyRate                               -0.033229             -0.026363  \n",
      "DistanceFromHome                         0.010029              0.014406  \n",
      "Education                                0.054254              0.069065  \n",
      "EmployeeNumber                          -0.009019             -0.009197  \n",
      "EnvironmentSatisfaction                  0.016194             -0.004999  \n",
      "HourlyRate                              -0.026716             -0.020123  \n",
      "JobInvolvement                          -0.024184              0.025976  \n",
      "JobLevel                                 0.353885              0.375281  \n",
      "JobSatisfaction                         -0.018214             -0.027656  \n",
      "MonthlyIncome                            0.344978              0.344079  \n",
      "MonthlyRate                              0.001567             -0.036746  \n",
      "NumCompaniesWorked                      -0.036814             -0.110319  \n",
      "PercentSalaryHike                       -0.022154             -0.011985  \n",
      "PerformanceRating                        0.017896              0.022827  \n",
      "RelationshipSatisfaction                 0.033493             -0.000867  \n",
      "StockOptionLevel                         0.014352              0.024698  \n",
      "TotalWorkingYears                        0.404858              0.459188  \n",
      "TrainingTimesLastYear                   -0.002067             -0.004096  \n",
      "WorkLifeBalance                          0.008941              0.002759  \n",
      "YearsAtCompany                           0.618409              0.769212  \n",
      "YearsInCurrentRole                       0.548056              0.714365  \n",
      "YearsSinceLastPromotion                  1.000000              0.510224  \n",
      "YearsWithCurrManager                     0.510224              1.000000  \n",
      "\n",
      "[24 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "data_Numeric = data.loc[:,numeric_cols] # 수치형 변수만 따로 indexing \n",
    "Numeric_Corr = data_Numeric.corr()\n",
    "# NaN을 갖는 행과 열 삭제 \n",
    "Numeric_Corr = Numeric_Corr.drop(['EmployeeCount','StandardHours'])\n",
    "Numeric_Corr = Numeric_Corr.drop(['EmployeeCount','StandardHours'],axis=1)\n",
    "\n",
    "print(Numeric_Corr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(Numeric_Corr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **6. 파생변수 생성**\n",
    "* A Variable that you create by calculating or categorising variables that already exist in your data set. \n",
    "* variables that are created from other variables using an expression\n",
    "### **Feature Engineering**\n",
    "* a machine learning technique that leverages data to create new variables that aren't in the training set \n",
    "* produce new features for both supervised and unsupervised learning, with the goal of **simplifying and speeding up data transformations while also enhancing model accuracy**\n",
    "* ref) https://towardsdatascience.com/what-is-feature-engineering-importance-tools-and-techniques-for-machine-learning-2080b0269f10"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **1. Loyalty**\n",
    "* 회사에 대한 충성도를 의미하는 변수\n",
    "* JobInvolvement, PerformanceRating, YearsAtCompany를 각각 합해서 구해봄. \n",
    "    * JobInvolvement : 업무 참여도, 업무 참여도가 높을 수록 회사에 대한 충성심이 높을 것이다.  \n",
    "    * PerformanceRating : 업무 성과, 업무 성과가 높을 수록 회사에 대한 충성심이 높을 것이다. \n",
    "    * YearsAtCompany : 회사 근속 연수, 회사에 오래 다닐 수록 회사에 대한 충성심(애사심)이 높을 것이다. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(1) 파생변수 생성**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "JobInvolvement : [1 2 3 4]\n",
      "PerformanceRating : [3 4]\n",
      "YearsAtCompany : [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n",
      " 24 25 26 27 29 30 31 32 33 34 36 37 40]\n"
     ]
    }
   ],
   "source": [
    "print(f'JobInvolvement : {np.sort(data_AttritionCategory[\"JobInvolvement\"].unique())}')\n",
    "print(f'PerformanceRating : {np.sort(data_AttritionCategory[\"PerformanceRating\"].unique())}')\n",
    "print(f'YearsAtCompany : {np.sort(data_AttritionCategory[\"YearsAtCompany\"].unique())}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 근속연수를 5개 분위로 나누어 각각 1~5로 점수를 부여함 \n",
    "YearsAtCompany_5Steps = []\n",
    "for Year in data_AttritionCategory['YearsAtCompany']:\n",
    "    if Year in tuple(range(9)):\n",
    "        YearsAtCompany_5Steps.append(1)\n",
    "    elif Year in tuple(range(9,17)):\n",
    "        YearsAtCompany_5Steps.append(2)\n",
    "    elif Year in tuple(range(17,25)):\n",
    "        YearsAtCompany_5Steps.append(3)\n",
    "    elif Year in tuple(range(25,33)):\n",
    "        YearsAtCompany_5Steps.append(4)\n",
    "    elif Year in tuple(range(33,41)):\n",
    "        YearsAtCompany_5Steps.append(5)   \n",
    "\n",
    "data_AttritionCategory['YearsAtCompany_5Steps'] = pd.Series(YearsAtCompany_5Steps)\n",
    "# 각 변수를 합하여 회사에 대한 충성도를 나타냄\n",
    "data_AttritionCategory['Loyalty'] = data_AttritionCategory['JobInvolvement'] + data_AttritionCategory['PerformanceRating'] + data_AttritionCategory['YearsAtCompany_5Steps']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 5  6  7  8  9 10 11]\n"
     ]
    }
   ],
   "source": [
    "print(np.sort(data_AttritionCategory['Loyalty'].unique())) # 범위 확인 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gwons\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Loyalty')\n",
    "sns.countplot(data_AttritionCategory['Loyalty'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(2) Attrition - Loyalty 간 관계**\n",
    "* **결과**\n",
    "    * 충성도가 5에서 9로 낮아질수록 퇴사자 비율이 줄어들다가 10, 11에서 갑자기 올라감."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loyalty\n",
      "5     0.384615\n",
      "6     0.218341\n",
      "7     0.172956\n",
      "10    0.117647\n",
      "8     0.112272\n",
      "11    0.111111\n",
      "9     0.070866\n",
      "Name: Attrition_Yes, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "Loyalty_Attrition = data_AttritionCategory.groupby('Loyalty')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "Loyalty_Attrition_Ratio=Loyalty_Attrition.values # 비율 값 \n",
    "Loyalty_Attrition_Index=Loyalty_Attrition.index # JobRole 인덱스\n",
    "\n",
    "print(Loyalty_Attrition)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.bar(Loyalty_Attrition_Index,Loyalty_Attrition_Ratio)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **2. Satisfiction**\n",
    "* 전반적인 만족도를 의미하는 변수\n",
    "* EnvironmentSatisfaction, JobSatisfaction, RelationshipSatisfaction, 이루어짐. \n",
    "    * 각각 업무환경, 업무, 대인관계의 만족도를 의미하는 변수로 전반적인 Satisfaction을 의미하는 변수로 선언 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(1) 파생변수 생성**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EnvironmentSatisfaction : [1 2 3 4]\n",
      "JobSatisfaction : [1 2 3 4]\n",
      "RelationshipSatisfaction : [1 2 3 4]\n",
      "WorkLifeBalance : [1 2 3 4]\n"
     ]
    }
   ],
   "source": [
    "print(f'EnvironmentSatisfaction : {np.sort(data_AttritionCategory[\"EnvironmentSatisfaction\"].unique())}')\n",
    "print(f'JobSatisfaction : {np.sort(data_AttritionCategory[\"JobSatisfaction\"].unique())}')\n",
    "print(f'RelationshipSatisfaction : {np.sort(data_AttritionCategory[\"RelationshipSatisfaction\"].unique())}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_AttritionCategory['Satisfaction'] = data_AttritionCategory['EnvironmentSatisfaction'] +  data_AttritionCategory['JobSatisfaction'] +  data_AttritionCategory['RelationshipSatisfaction'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 3  4  5  6  7  8  9 10 11 12]\n"
     ]
    }
   ],
   "source": [
    "print(np.sort(data_AttritionCategory['Satisfaction'].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gwons\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Satisfaction')\n",
    "sns.countplot(data_AttritionCategory['Satisfaction'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(2) Attrition - Satisfaction 간의 관계**\n",
    "* **결과**\n",
    "    * 전반적인 만족도가 가장 낮은 4가 퇴사자 중 비율이 가장 높음. \n",
    "    * 만족도 중 가장 높은 값인 12가 퇴사자 중 비율이 가장 낮음. \n",
    "    * 두번째로 높은 값인 11이 퇴사자 중 14.5%의 비율을 차지하고, 이는 6번째로 높은 순위임.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Satisfaction\n",
      "4     0.550000\n",
      "3     0.437500\n",
      "5     0.275000\n",
      "6     0.196532\n",
      "7     0.180328\n",
      "11    0.145161\n",
      "8     0.134483\n",
      "9     0.133829\n",
      "10    0.112150\n",
      "12    0.050000\n",
      "Name: Attrition_Yes, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "Satisfaction_Attrition = data_AttritionCategory.groupby('Satisfaction')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "Satisfaction_Attrition_Ratio = Satisfaction_Attrition.values\n",
    "Satisfaction_Attrition_Index = Satisfaction_Attrition.index\n",
    "\n",
    "print(Satisfaction_Attrition)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAEICAYAAABPgw/pAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAASxElEQVR4nO3df7Ddd13n8eeLhFLoWhByRZqkpGKkWzpFmWyFyqzsSp2UFoIjSgtCWWQ6caf+2LErYXfVdXDX4KpTxUqmYiwK04qImiXBUmEQgS2bgGwlpcUYIr0NbW9bS0nBlrTv/eP7Tedwufeec5N77kk+eT5mvpPz/X4+5/t9f08yr/M5n/P9nqSqkCSd+J4w6QIkSUvDQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNC1bJKcmeRQkhUj9P3VJPcmuWuJa3htkg8t5T6XS5JtSX5xgfb/kuSdy1mTji/xxiINk+TFwK8DzwMeBT4P/FxV7R7yvAPAm6rqrxd5vLXAF4BnV9U9R1V0t591wBeBJ1bV4aPdz1Ee+zTgbuBjVfWyhWpK8ga61+nFi9j/S4B3V9WapataJzpH6FpQktOBDwBvB54OrAZ+BXh4jId9NnDfsYT5ceBVdK/RDyd51rHubJRPNRJV5eIy7wJsAB6Yp+05wEeA+4B7gfcAT+vb/hh4DPg6cAj4BWAdUMDKvs8bgP3AV+lGra8FXto/57H+edf1ff8UuAv4CvAx4HkDdTwZ+E3gn/r2j/fbvtQf71C/vKg/5scHnnsBsLt/3m7ggoG2jwJvBT7R1/ghYNWIr9tHgP8BfAa4amD7XDX9C90nn0NHXmvgOuAdwC7gof51uQ74VeC0Wa/RIeAM4L/TjdqPHOsVwF7ggf5c/vVA2wHgKuCW/tz/BDh10v/eXI5tmXgBLsf3ApzeB/a7gIuAbx9o+27gQuBJwFQftFcPtB8AXjqw/nig96H0IPDcvu1ZR0IaeAkwPauONwLf1h/rauCzA23X9IG1GljRh/STmPUG0vd9PNDpPnH8M/C6vqbL+vVn9O0fBf4R+B66N4iPAltHeM3O7MP2HODngVvmeg3mqmlg23V90P4A3SfpU48E+gKv0eOB3tf8UP/380S6N9R9wCkDfzf/l+6N4Ol002ibJ/3vzeXYFqdctKCqehB4MV0I/T4wk2RHkmdW1b6quqmqHq6qGeC3gB9cxO4fA85N8uSq+nJV7V2gju1V9dWqepguuJ6f5KlJnkAX9j9bVXdW1aNV9cm+3zAXA/9QVX9cVYer6nrgNuDlA33+sKq+UFVfB94LfO8I+309XYjfClwPPC/J943wvNn+sqo+UVWPVdW/LPK5rwZ29n8/3wB+g+5N6YKBPr9TVQer6n7gfzPauek4ZqBrqKr6fFW9obov4M6lG9VdneQ7ktyQ5M4kDwLvBlaNuM+H6EJnM/DlJDuTnD1X3yQrkmxN8o/9cQ70Tav65VS6kfRinUE3TTPon+hG+kcMXmXzNeBfjbDf19NNP1FVB4G/AS4/ivruOIrnHPFN51ZVj/X7O9Zz03HMQNeiVNVtdB/9zwV+jW7kfl5VnQ78BJDB7kP2dWNVXUg33XIb3SeAubwG2EQ3j/xUumkL+mPdSzcH/Zy5DjHkdA7SfQE76EzgziHPm1eSC4D1wFuS3NVfdvn9wGVJVs5T03x1LlT/os4tSYC1HMO56fhnoGtBSc5O8vNJ1vTra+nmmm+mm9M+BDyQZDXwn2c9/W7gu+bZ7zOTvKK/vO/hfj+PzlPGt/V97gOeAvzPIw39yHM78FtJzuhH8y9K8iRghm5aZ84a6L5w/J4kr0myMsmr6ea9P7DASzLM5cBN/X6+t1/O7eu+aJ6a7gbWJDllEce5G3hGkqfO0/5e4OIkP5TkiXRz+Q8Dn1zEMXSCMdA1zFfpRpifSvIQXZB/ji4gfgV4Ad2XdzuB98967q8B/y3JA0mumtX2hH4fB4H76ebe/+M8NfwR3fTBncCtfQ2DrgL+nu4qlfuBtwFPqKqv0V1p8om+hhcOPqmq7gMu6eu4j+6Lw0uq6t6FXpD5JDkV+HHg7VV118DyRbqrfi6fp6aP0F2NcleSkY7df1K6Htjf7+eMWe23031iejvdp5iXAy+vqkeO5tx0YvDGIklqhCN0SWqEgS4tUv97MIfmWOa97FJaDk65SFIjVk7qwKtWrap169ZN6vCSdEL69Kc/fW9VTc3VNrFAX7duHXv27JnU4SXphJRk9s1wj3MOXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGjGxO0VPVOu27Bz7MQ5svXjsx5DUHkfoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRIwV6ko1Jbk+yL8mWOdpfkuQrST7bL7+09KVKkhYy9PfQk6wArgEuBKaB3Ul2VNWts7r+bVVdMoYaJUkjGGWEfj6wr6r2V9UjwA3ApvGWJUlarFECfTVwx8D6dL9tthcl+X9JPpjkeUtSnSRpZKP8F3SZY1vNWv8M8OyqOpTkZcBfAOu/ZUfJFcAVAGeeeebiKpUkLWiUEfo0sHZgfQ1wcLBDVT1YVYf6x7uAJyZZNXtHVXVtVW2oqg1TU1PHULYkabZRAn03sD7JWUlOAS4Fdgx2SPKdSdI/Pr/f731LXawkaX5Dp1yq6nCSK4EbgRXA9qram2Rz374NeBXwU0kOA18HLq2q2dMykqQxGmUO/cg0yq5Z27YNPP5d4HeXtjRJ0mJ4p6gkNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEaM9F/QHW/Wbdk59mMc2Hrx2I8hSUvJEbokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRowU6Ek2Jrk9yb4kWxbo92+SPJrkVUtXoiRpFEMDPckK4BrgIuAc4LIk58zT723AjUtdpCRpuFFG6OcD+6pqf1U9AtwAbJqj308Dfwbcs4T1SZJGNEqgrwbuGFif7rc9Lslq4EeAbQvtKMkVSfYk2TMzM7PYWiVJCxgl0DPHtpq1fjXw5qp6dKEdVdW1VbWhqjZMTU2NWKIkaRSj/B76NLB2YH0NcHBWnw3ADUkAVgEvS3K4qv5iKYqUJA03SqDvBtYnOQu4E7gUeM1gh6o668jjJNcBHzDMJWl5DQ30qjqc5Eq6q1dWANuram+SzX37gvPmkqTlMdJ/QVdVu4Bds7bNGeRV9YZjL0uStFjeKSpJjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1IiRAj3JxiS3J9mXZMsc7ZuS3JLks0n2JHnx0pcqSVrIymEdkqwArgEuBKaB3Ul2VNWtA90+DOyoqkpyHvBe4OxxFCxJmtsoI/TzgX1Vtb+qHgFuADYNdqiqQ1VV/eppQCFJWlajBPpq4I6B9el+2zdJ8iNJbgN2Am+ca0dJruinZPbMzMwcTb2SpHmMEuiZY9u3jMCr6s+r6mzglcBb59pRVV1bVRuqasPU1NSiCpUkLWyUQJ8G1g6srwEOzte5qj4GPCfJqmOsTZK0CKME+m5gfZKzkpwCXArsGOyQ5LuTpH/8AuAU4L6lLlaSNL+hV7lU1eEkVwI3AiuA7VW1N8nmvn0b8KPA65N8A/g68OqBL0klSctgaKADVNUuYNesbdsGHr8NeNvSliZJWgzvFJWkRhjoktQIA12SGjHSHLqOH+u27Bzr/g9svXis+5c0Po7QJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjRgp0JNsTHJ7kn1JtszR/tokt/TLJ5M8f+lLlSQtZGigJ1kBXANcBJwDXJbknFndvgj8YFWdB7wVuHapC5UkLWyUEfr5wL6q2l9VjwA3AJsGO1TVJ6vqn/vVm4E1S1umJGmYUQJ9NXDHwPp0v20+Pwl8cK6GJFck2ZNkz8zMzOhVSpKGGiXQM8e2mrNj8u/oAv3Nc7VX1bVVtaGqNkxNTY1epSRpqJUj9JkG1g6srwEOzu6U5DzgncBFVXXf0pSn48m6LTvHuv8DWy8e6/6l1o0yQt8NrE9yVpJTgEuBHYMdkpwJvB94XVV9YenLlCQNM3SEXlWHk1wJ3AisALZX1d4km/v2bcAvAc8Afi8JwOGq2jC+siVJs40y5UJV7QJ2zdq2beDxm4A3LW1pkqTF8E5RSWqEgS5JjRhpykWaNK+wkYZzhC5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRvjjXJKOO+P+MTZo8wfZHKFLUiMMdElqhIEuSY1wDl0aYpLzuc4lazEcoUtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIa4Y1FkubkTU0nnpFG6Ek2Jrk9yb4kW+ZoPzvJ/0nycJKrlr5MSdIwQ0foSVYA1wAXAtPA7iQ7qurWgW73Az8DvHIcRUqShhtlhH4+sK+q9lfVI8ANwKbBDlV1T1XtBr4xhholSSMYJdBXA3cMrE/32xYtyRVJ9iTZMzMzczS7kCTNY5RAzxzb6mgOVlXXVtWGqtowNTV1NLuQJM1jlECfBtYOrK8BDo6nHEnS0Rol0HcD65OcleQU4FJgx3jLkiQt1tCrXKrqcJIrgRuBFcD2qtqbZHPfvi3JdwJ7gNOBx5L8HHBOVT04vtIlSYNGurGoqnYBu2Zt2zbw+C66qRhJ0oR4678kNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjRvq1RUk6WazbsnPsxziw9eKx7NcRuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0YKdCTbExye5J9SbbM0Z4kv9O335LkBUtfqiRpIUMDPckK4BrgIuAc4LIk58zqdhGwvl+uAN6xxHVKkoYYZYR+PrCvqvZX1SPADcCmWX02AX9UnZuBpyV51hLXKklaQKpq4Q7Jq4CNVfWmfv11wPdX1ZUDfT4AbK2qj/frHwbeXFV7Zu3rCroRPMBzgduX6kSOc6uAeyddxAR43icXz3t5PLuqpuZqGOX/FM0c22a/C4zSh6q6Frh2hGM2Jcmeqtow6TqWm+d9cvG8J2+UKZdpYO3A+hrg4FH0kSSN0SiBvhtYn+SsJKcAlwI7ZvXZAby+v9rlhcBXqurLS1yrJGkBQ6dcqupwkiuBG4EVwPaq2ptkc9++DdgFvAzYB3wN+A/jK/mEdNJNM/U875OL5z1hQ78UlSSdGLxTVJIaYaBLUiMM9DFLsiLJ3/XX6p80kjwtyfuS3Jbk80leNOmalkOS/5Rkb5LPJbk+yamTrmkckmxPck+Szw1se3qSm5L8Q//nt0+yxnGY57z/V//v/JYkf57kaZOqz0Afv58FPj/pIibgt4G/qqqzgedzErwGSVYDPwNsqKpz6S4iuHSyVY3NdcDGWdu2AB+uqvXAh/v11lzHt573TcC5VXUe8AXgLctd1BEG+hglWQNcDLxz0rUspySnA/8W+AOAqnqkqh6YaFHLZyXw5CQrgafQ6P0YVfUx4P5ZmzcB7+ofvwt45XLWtBzmOu+q+lBVHe5Xb6a7D2ciDPTxuhr4BeCxCdex3L4LmAH+sJ9uemeS0yZd1LhV1Z3AbwBfAr5Mdz/GhyZb1bJ65pH7T/o/v2PC9UzCG4EPTurgBvqYJLkEuKeqPj3pWiZgJfAC4B1V9X3AQ7T58fub9HPGm4CzgDOA05L8xGSr0nJJ8l+Bw8B7JlWDgT4+PwC8IskBul+o/PdJ3j3ZkpbNNDBdVZ/q199HF/CteynwxaqaqapvAO8HLphwTcvp7iO/str/ec+E61k2SS4HLgFeWxO8ucdAH5OqektVramqdXRfjH2kqk6K0VpV3QXckeS5/aYfAm6dYEnL5UvAC5M8JUnozrv5L4MH7AAu7x9fDvzlBGtZNkk2Am8GXlFVX5tkLaP82qJ0NH4aeE//+z/7OQl+DqKqPpXkfcBn6D56/x3H0W3hSynJ9cBLgFVJpoFfBrYC703yk3Rvbj82uQrHY57zfgvwJOCm7n2cm6tq80Tq89Z/SWqDUy6S1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXi/wP/DbrqXl601gAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Satisfaction_Attrition')\n",
    "plt.bar(Satisfaction_Attrition_Index,Satisfaction_Attrition_Ratio)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### **TotalJob**\n",
    "* Job, 업무에 관한 전반적인 내용을 담은 지표\n",
    "* EnvironmentSatisfaction, JobInvolvement, JobLevel, JobSatisfaction, PerformanceRating"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(1) 파생변수 생성**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EnvironmentSatisfaction : [1 2 3 4]\n",
      "JobInvolvement : [1 2 3 4]\n",
      "JobLevel : [1 2 3 4 5]\n",
      "JobSatisfaction : [1 2 3 4]\n",
      "PerformanceRating : [3 4]\n"
     ]
    }
   ],
   "source": [
    "print(f'EnvironmentSatisfaction : {np.sort(data_AttritionCategory[\"EnvironmentSatisfaction\"].unique())}')\n",
    "print(f'JobInvolvement : {np.sort(data_AttritionCategory[\"JobInvolvement\"].unique())}')\n",
    "print(f'JobLevel : {np.sort(data_AttritionCategory[\"JobLevel\"].unique())}')\n",
    "print(f'JobSatisfaction : {np.sort(data_AttritionCategory[\"JobSatisfaction\"].unique())}')\n",
    "print(f'PerformanceRating : {np.sort(data_AttritionCategory[\"PerformanceRating\"].unique())}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_AttritionCategory['Job'] = data_AttritionCategory['EnvironmentSatisfaction'] +  data_AttritionCategory['JobInvolvement'] + data_AttritionCategory['JobLevel'] +  data_AttritionCategory['JobSatisfaction']+  data_AttritionCategory['PerformanceRating']                                "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 8  9 10 11 12 13 14 15 16 17 18 19]\n"
     ]
    }
   ],
   "source": [
    "print(np.sort(data_AttritionCategory['Job'].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gwons\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Job')\n",
    "sns.countplot(data_AttritionCategory['Job'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### **(2) Attrition - Job 간의 관계**\n",
    "* **결과**\n",
    "    * 전반적으로 TotalJob의 값과 퇴사자 비율이 서로 반비례함. (낮을수록 높은 퇴사자 비율)\n",
    "    * 업무 만족도, 업무환경 만족도와 참여도와 성과 등 전반적인 내용을 담은 변수여서, 가장 높은 18, 19 value에 대해서 퇴사자는 없음. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Job\n",
      "8     0.666667\n",
      "9     0.645161\n",
      "10    0.343750\n",
      "11    0.240260\n",
      "12    0.184549\n",
      "13    0.162069\n",
      "15    0.130631\n",
      "14    0.093878\n",
      "17    0.053571\n",
      "16    0.052632\n",
      "18    0.000000\n",
      "19    0.000000\n",
      "Name: Attrition_Yes, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "Job_Attrition = data_AttritionCategory.groupby('Job')['Attrition_Yes'].agg(np.mean).sort_values(ascending=False)\n",
    "\n",
    "Job_Attrition_Ratio = Job_Attrition.values\n",
    "Job_Attrition_Index = Job_Attrition.index\n",
    "\n",
    "print(Job_Attrition)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.title('Satisfaction_Attrition')\n",
    "plt.bar(Job_Attrition_Index,Job_Attrition_Ratio)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.7 ('base')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "66dcc688a2f7733e69b1ad56a14d8c7ef7b3705d8f91d4148e082df31a12869c"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
